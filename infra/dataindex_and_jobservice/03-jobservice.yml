apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: jobs-service-postgresql
  name: jobs-service-postgresql
spec:
  replicas: 1
  # remove after https://issues.redhat.com/browse/KOGITO-8311 is done
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: jobs-service-postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jobs-service-postgresql
    spec:
      containers:
        - name: jobs-service-postgresql
          image: quay.io/kiegroup/kogito-jobs-service-allinone:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: postgres-secrets
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-secrets
          envFrom:
            - configMapRef:
                name: jobs-service-properties
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
      initContainers:
        - name: init-postgres
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until nc -vz postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local 5432; do echo "Waiting for postgres server"; sleep 3; done;']
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: jobs-service-postgresql
  name: jobs-service-postgresql
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: jobs-service-postgresql
  type: NodePort
