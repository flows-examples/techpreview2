apiVersion: sonataflow.org/v1alpha08
kind: SonataFlowPlatform
metadata:
  name: sonataflow-platform
spec:
  build:
    config:
      strategyOptions:
        KanikoBuildCacheEnabled: "false"
  eventing:
    # Platform Broker configuration. Should be used by DI, JS and the workflows.
    broker:
      ref:
        name: default
        apiVersion: eventing.knative.dev/v1
        kind: Broker
  services:
    dataIndex:
      enabled: true
      persistence:
        postgresql:
          serviceRef:
            name: postgres
            databaseName: sonataflow
            databaseSchema: data-index-schema
          secretRef:
            name: postgres-secrets
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
      podTemplate:
        initContainers:
          - name: init-postgres
            image: registry.access.redhat.com/ubi9/ubi-minimal:latest
            imagePullPolicy: IfNotPresent
            command: [ 'sh', '-c', 'until (echo 1 > /dev/tcp/postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/5432) >/dev/null 2>&1; do echo "Waiting for postgres server"; sleep 3; done;' ]
    jobService:
      enabled: true
      persistence:
        postgresql:
          serviceRef:
            name: postgres
            databaseName: sonataflow
            databaseSchema: jobs-service-schema
          secretRef:
            name: postgres-secrets
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
      podTemplate:
        initContainers:
                - name: init-postgres
                  image: registry.access.redhat.com/ubi9/ubi-minimal:latest
                  imagePullPolicy: IfNotPresent
                  command: [ 'sh', '-c', 'until (echo 1 > /dev/tcp/postgres.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local/5432) >/dev/null 2>&1; do echo "Waiting for postgres server"; sleep 3; done;' ]
