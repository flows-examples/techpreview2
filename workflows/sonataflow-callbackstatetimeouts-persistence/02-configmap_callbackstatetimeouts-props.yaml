apiVersion: v1
data:
  application.properties: |
    # Uncomment this line if you want the service discovery to determine the kogito.service.url,
    # otherwise the operator will automatically default this property with the cluster DNS name of the service
    # http://callbackstatetimeouts.usecase3-persistence 
    # kogito.service.url=${kubernetes:services.v1/callbackstatetimeouts}
    
    # Job Service kogito-addons-quarkus-jobs-knative-eventing configuration
    mp.messaging.outgoing.kogito-job-service-job-request-events.connector=quarkus-http
    mp.messaging.outgoing.kogito-job-service-job-request-events.url=http://jobs-service-postgresql/v2/jobs/events
    
    # Data Index configuration
    mp.messaging.outgoing.kogito-processinstances-events.url=http://data-index-service-postgresql/processes

    mp.messaging.outgoing.kogito-usertaskinstances-events.url=http://data-index-service-postgresql/tasks

    mp.messaging.outgoing.kogito-variables-events.url=http://data-index-service-postgresql/variables

    # Skip user tasks and variables events sending.
    kogito.events.usertasks.enabled=false
    kogito.events.variables.enabled=false

    # Kogito runtime persistence configurations
    kogito.persistence.type=jdbc
    kogito.persistence.proto.marshaller=false
    kogito.persistence.query.timeout.millis=10000
   
    quarkus.datasource.db-kind=postgresql
    # Set to false to create the tables manually. Automatic generation is a different use case.
    quarkus.flyway.migrate-at-start=false
      
    quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/sonataflow
    quarkus.datasource.username=sonataflow
    quarkus.datasource.password=sonataflow

    quarkus.log.category."io.smallrye.reactive.messaging".level = DEBUG
    quarkus.log.category."org.kie".level = DEBUG
    quarkus.log.category."io.quarkus.reactivemessaging".level = DEBUG
    quarkus.log.category."io.vertx".level = DEBUG
kind: ConfigMap
metadata:
  labels:
    app: callbackstatetimeouts
  name: callbackstatetimeouts-props
